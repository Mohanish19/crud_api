openapi: 3.0.0
info:
  title: Task Management API
  description: An API for managing tasks and subtasks.
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

security:
  - bearerAuth: [] 

paths:
  /tasks:
    get:
      summary: Get a List of Tasks
      responses:
        '200':
          description: List of tasks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    task_id:
                      type: integer
                      description: The unique ID of the task.
                    title:
                      type: string
                      description: The title of the task.
                    description:
                      type: string
                      description: The description of the task.
                    status:
                      type: string
                      description: The status of the task.

    post:
      summary: Create a Task
      requestBody:
        description: Task data.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the task.
                description:
                  type: string
                  description: The description of the task.
                status:
                  type: string
                  description: The status of the task.
                parent_task_id:
                  type: integer
                  description: The ID of the parent task, if it's a subtask.
                parent_subtask_id:
                  type: integer
                  description: The ID of the parent subtask, if it's a sub-subtask.

      responses:
        '201':
          description: Task created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: integer
                    description: The unique ID of the created task.
                  title:
                    type: string
                    description: The title of the created task.
                  description:
                    type: string
                    description: The description of the created task.
                  status:
                    type: string
                    description: The status of the created task.

  /tasks/{id}:
    get:
      summary: Get Task and Subtasks by Task ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the task to retrieve along with its subtasks.
          schema:
            type: integer
          example: 123

      responses:
        '200':
          description: Task and subtasks retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    task_id:
                      type: integer
                      description: The unique ID of the task.
                    title:
                      type: string
                      description: The title of the task.
                    description:
                      type: string
                      description: The description of the task.
                    status:
                      type: string
                      description: The status of the task.
                    subtasks:
                      type: array
                      description: An array of subtasks associated with the task.
                      items:
                        type: object
                        properties:
                          subtask_id:
                            type: integer
                            description: The unique ID of the subtask.
                          subtask_title:
                            type: string
                            description: The title of the subtask.
                          subtask_description:
                            type: string
                            description: The description of the subtask.
                          subtask_status:
                            type: string
                            description: The status of the subtask.

        '404':
          description: Task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing that the task was not found.

    put:
      summary: Update a Task or Subtask by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the task or subtask to update.
          schema:
            type: integer
          example: 123

      requestBody:
        description: Updated task or subtask data.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The updated title of the task or subtask.
                description:
                  type: string
                  description: The updated description of the task or subtask.
                status:
                  type: string
                  description: The updated status of the task or subtask.

      responses:
        '200':
          description: Task or subtask updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The unique ID of the updated task or subtask.
                  title:
                    type: string
                    description: The updated title of the task or subtask.
                  description:
                    type: string
                    description: The updated description of the task or subtask.
                  status:
                    type: string
                    description: The updated status of the task or subtask.

        '404':
          description: Task or subtask not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing that the task or subtask was not found.

    delete:
      summary: Delete a Task or Subtask by ID
      parameters:
        - in: path
          name: id
          required: true
          description: The ID of the task or subtask to delete.
          schema:
            type: integer
          example: 123

      responses:
        '204':
          description: Task or subtask deleted successfully.

        '404':
          description: Task or subtask not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Error message describing that the task or subtask was not found.

        '500':
          description: Internal Server Error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    description: Internal server error message.
